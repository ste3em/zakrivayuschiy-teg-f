/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

.page {
  padding-block: 100px;
  color: var(--text-color, black);
  font-family: var(--font, fantasy);
  font-size: var(--text-size, 18px);
  font-style: normal;
  background-color: var(--background-color, white);
  background-image: var(--background-image-gradient);
  background-size: cover;
  background-attachment: fixed;
  min-block-size: 100dvb;
  min-inline-size: 320px;
  font-variation-settings: 'wght' var(--text-font-weight, 400);
}

.button {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  border: none;
  padding: 0;
  font-family: var(--font-accent, fantasy);
  font-weight: 400;
  font-size: var(--text-menu-size, 14px);
  font-style: normal;
  background-color: transparent;
  transition: box-shadow 0.3s ease;
  cursor: pointer;
}

.button:focus {
  box-shadow: 2px 2px 0 var(--main-color, #000);
  outline: none;
}

.button:focus-visible {
  border: 2px solid var(--border-color, black);
}

.button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--border-color, black);
  transition: 0.5s ease-in-out;
  transform: scaleX(0);
  transform-origin: left;
}

.button:hover::before {
  transition: 0.5s ease-in-out;
  transform: scale(1);
}

.button:hover:after {
  transform: scaleX(1);
}

.border {
  border: 2px solid var(--border-color, black);
  background-color: var(--background-color, white);
}

.header {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-block-end: 100px;
  padding-inline-start: 14px;
  padding-inline-end: 14px;
  padding-block-start: 136px;
  padding-block-end: 20px;
}

.logo {
  text-decoration: none;
}

.logo-group {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.header__title {
  margin-block-end: 23px;
  font-family: var(--font-accent, fantasy);
  font-weight: 400;
  font-size: var(--title-size);
  font-style: normal;
  line-height: normal;
  text-transform: uppercase;
}

.header__subtitle {
  margin-block-end: 20px;
  outline: none;
  font-family: var(--font-accent, fantasy);
  font-weight: 400;
  font-size: var(--subtitle-size);
  font-style: normal;
  line-height: normal;
  text-decoration: none;
  text-transform: uppercase;
}

.adaptive-content {
  margin-inline: auto;
  inline-size: var(--content-size, clamp(375px, 70vi, 700px));
}

.header__theme-menu {
  order: 3;
  margin-inline-start: 18px;
}

.theme-menu__list {
  display: flex;
  flex-direction: column;
  gap: 0.4em;
}

.theme-menu__item {
  position: relative;
}

.theme-menu__button {
  border: none;
  padding: 0;
  font-family: var(--font-accent, fantasy);
  font-weight: 400;
  font-size: var(--text-menu-size, 14px);
  line-height: normal;
  text-transform: uppercase;
  background-color: transparent;
  transition: ease 0.3s;
  cursor: pointer;
}

.theme-menu__button::after {
  content: '';
  right: 0;
  bottom: -3px;
  display: block;
  width: 100%;
  height: 2px;
  opacity: 0.6;
  background-color: var(--text-color-accent, black);
  transition: ease 0.3s;
  transform: scaleX(0);
  transform-origin: left;
}

.theme-menu__button:hover {
  opacity: 0.6;
  cursor: pointer;
}

.theme-menu__button:focus {
  opacity: 0.6;
}

.theme-menu__button:focus-visible {
  outline: none;
  opacity: 0.6;
}

.theme-menu__button:focus-visible::after {
  transform: scaleX(1);
}

.theme-menu__button:disabled {
  opacity: 0.6;
  pointer-events: none;
}

.theme-menu__button:disabled::before {
  content: '▶';
  position: absolute;
  animation-name: arrow;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  inset-inline-start: -20px;
  animation-duration: 0.5s;
}

.main {
  display: flex;
  flex-direction: column;
  row-gap: 50px;
}

.card__heading {
  padding: 5px 10px;
  font-size: var(--text-size, 18px);
  line-height: normal;
  font-variation-settings: 'wght' var(--heading-font-weight, 700);
}

.card__image-inner-wrap {
  position: relative;
  display: grid;
  align-items: center;
  align-content: center;
  border-block: 2px solid var(--border-color, black);
  inline-size: 100%;
  aspect-ratio: 1 / 1;
}

.card__image {
  display: block;
  width: 100%;
  object-fit: cover;
  object-position: center center;
  aspect-ratio: 1 / 1;
}

.lable {
  position: absolute;
  top: 27px;
  right: 25px;
  opacity: 0.5;
  font-family: var(--font-accent, fantasy);
  font-size: var(--text-menu-size, 14px);
  text-transform: uppercase;
  text-shadow:
    1px 1px var(--text-color-shadow, white),
    -1px -1px var(--text-color-shadow, white),
    -1px 1px var(--text-color-shadow, white),
    1px -1px var(--text-color-shadow, white);
  mix-blend-mode: hard-light;
}

@supports (
  (text-stroke: 1px var(--text-color-shadow)) or
    (-webkit-text-stroke: 1px var(--text-color-shadow))
) {

  .lable {
    text-shadow: none;
    -webkit-text-stroke: 1px var(--text-color-shadow);
    -moz-text-stroke: 1px var(--text-color-shadow);
    -o-text-stroke: 1px var(--text-color-shadow);
    -ms-text-stroke: 1px var(--text-color-shadow);
    text-stroke: 1px var(--text-color-shadow);
  }
}

.card__text-inner-wrap {
  padding: 23px 25px;
  line-height: calc(21 / 18);
}

.card__text {
  margin-block-end: 28px;
}

.card__text:last-of-type {
  margin-block-end: 26px;
}

.card__button-inner-wrap {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 4px;
}

.like-icon {
  cursor: pointer;
}

.card__like-button-text {
  width: 130px;
  height: 38px;
  line-height: 0.9;
}

.button__text {
  color: var(--color-span-button, white);
  mix-blend-mode: difference;
}

.main__save-button {
  gap: 8px;
  width: 337px;
  min-height: 53px;
  margin: 0 auto;
  padding: 10px;
  overflow: hidden;
}

.button__svg {
  width: 21px;
  height: 21px;
  color: var(--color-span-button, white);
  mix-blend-mode: difference;
}

.dialog {
  position: fixed;
  inset: 0;
  display: flex;
  flex-direction: column;
  gap: 30px;
  padding: 30px;
  color: var(--text-color, black);
}

.dialog:not([open]) {
  display: none;
  pointer-events: none;
}

.dialog::backdrop {
  opacity: 0.75;
  background: var(--color-black, #000);
}

.box {
  display: flex;
  align-items: center;
  gap: 20px;
  font-family: var(--font-accent, fantasy);
  font-size: var(--text-menu-size, 14px);
  line-height: 1.5;
  text-transform: uppercase;
}

.box p {
  max-width: 234px;
}

.dialog__svg {
  width: 40px;
  height: 40px;
}

.dialog__form {
  display: flex;
}

.dialog__button {
  flex-grow: 1;
  padding: 10px;
  text-transform: uppercase;
  transition: ease 0.3s;
}

@media (width < 450px) {

  .header {
    padding-block-start: 120px;
  }

  .main__save-button {
    flex-direction: column;
    width: 308px;
    min-height: 84px;
  }

  .button__svg {
    width: 27px;
    height: 27px;
  }

  .box p {
    max-width: 198px;
  }

  .lable {
    top: 24px;
    right: 11px;
  }
  
  .card .lable {
    text-transform: none;
  }

  .card:nth-of-type(-n+3) .lable {
    text-transform: uppercase;
  }
}

.card__icon-button {
  display: flex;
  border: 2px solid transparent;
  background-color: transparent;
  transition: border 0.3s ease;
}

.card__icon-button:hover::before{
  background-color: transparent;
}

/* Фильтры */

.filter-multiple {
  filter: sepia(0.6) saturate(60%) brightness(80%);
}

.filter-saturate {
  filter: saturate(300%);
}

.filter-hue-rotate {
  filter: hue-rotate(0.1turn);
}

.filter-invert {
  filter: invert(80%);
}

.filter-sepia {
  filter: sepia(0.6) contrast(60%);
}

.filter-blur {
  filter: blur(15px);
}

.filter-multiinvert {
  filter: invert(80%) hue-rotate(0.7turn) brightness(60%);
}